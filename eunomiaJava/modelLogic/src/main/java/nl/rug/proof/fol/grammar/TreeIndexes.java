package nl.rug.proof.fol.grammar;

/**
 * Class containing constants for tree traversing corresponding to the defined grammar.
 * This simplifies getting different children from sentences (eg: variables, different parts of binary sentences)
 *
 * IMPORTANT: The notations must coincide with the ones generated by the ANTLR4 file.
 */
public class TreeIndexes {
    public static final Integer SENTENCE_WITHIN_PARENTHESIS = 1;
    public static final Integer QUANTIFIER = 0;
    public static final Integer BOUNDED_VARIABLE = 1;
    public static final Integer QUANTIFIED_SENTENCE = 2;
    public static final Integer FUNCTION_ARGUMENT = 2;
    // Sometimes used when an index is required, but it does not make sense ??
    public static final Integer FIRST_ELEMENT = 0;
    public static final Integer BOXED_CONSTANT = 1;
    public static final Integer CONSTANT_WITHIN_BOX = 1;
    public static final Integer FIRST_REFERENCE = 0;
    public static final Integer SECOND_REFERENCE = 1;
    public static final Integer NEGATION_SYMBOL = 0;
    public static final Integer NEGATED_SENTENCE = 1;
    public static final Integer LEFT_IDENTITY = 0;
    public static final Integer RIGHT_IDENTITY = 2;
    public static final Integer LEFT_IMPLICATION = 0;
    public static final Integer RIGHT_IMPLICATION = 2;
    public static final Integer LEFT_BICONDITIONAL = 0;
    public static final Integer RIGHT_BICONDITIONAL = 2;
    public static final Integer BINARY_OPERATOR = 1;
    public static final Integer LEFT_SENTENCE = 0;
    public static final Integer RIGHT_SENTENCE = 2;
}
